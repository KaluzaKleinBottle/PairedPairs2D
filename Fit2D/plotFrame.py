import ROOT

def stylePull(H, E, name):
	canvas = ROOT.TCanvas("c"+name, "", 600, 600)
	pad = ROOT.TPad(name, name, 0, 0.25, 1, 1)
	pad.SetTopMargin(0.1)
	pad.SetBottomMargin(0.005)
	pad.SetLeftMargin(0.13)
	pad.SetRightMargin(0.15)
	pad.SetLogy()
	H.SetLineColor(ROOT.kBlack)
	H.GetYaxis().SetTitle("Number of events")
	H.SetMarkerStyle(20)
	H.SetLineWidth(1)
	H.SetStats(0)
	E.SetLineColor(ROOT.kRed)
	E.SetLineWidth(1)
	# try: E.SetStats(0)
	pad.cd()
	H.GetXaxis().SetRange(0, H.FindLastBinAbove(0)+5)
	# H.GetXaxis().SetRangeUser(0, 1600)
	H.Draw()
	# try: E.Draw("same hist")
	E.Draw("same")

	pull = H.Clone("p"+name)
	pull.Add(E, -1)
	for n in range(1, pull.GetXaxis().GetNbins()):
		pull.SetBinError(n, 0)
		try:
			if pull.GetXaxis().GetBinUpEdge(n) <= E.GetHistogram().GetBinLowEdge(E.GetHistogram().FindFirstBinAbove(0)): pull.SetBinContent(n, 0)
			else:
				if H.GetBinError(n) != 0: pull.SetBinContent(n, pull.GetBinContent(n)/H.GetBinError(n))
				else: pull.SetBinContent(n, pull.GetBinContent(n)/1.4)
		except:
			if pull.GetXaxis().GetBinUpEdge(n) <= E.GetBinLowEdge(E.FindFirstBinAbove(0)): pull.SetBinContent(n, 0)
			else:
				if H.GetBinError(n) != 0: pull.SetBinContent(n, pull.GetBinContent(n)/H.GetBinError(n))
				else: pull.SetBinContent(n, pull.GetBinContent(n)/1.4)

	pullpad = ROOT.TPad("pp"+name, '', 0, 0, 1, 0.25)
	pullpad.SetLeftMargin(0.13)
	pullpad.SetRightMargin(0.15)
	pullpad.SetTopMargin(0.04)
	pullpad.SetBottomMargin(0.3)
	pullpad.SetGrid()
	pull.SetBit(ROOT.TH1.kNoTitle)
	pull.SetStats(0)
	pull.SetLineColor(ROOT.kRed)
	pull.SetFillColor(ROOT.kRed)
	pull.GetXaxis().SetLabelSize(0.1)
	pull.GetXaxis().SetTitle('#bar{M}_{jj} [GeV]')
	pull.GetXaxis().SetTitleSize(0.1)
	pull.GetYaxis().SetNdivisions(505)
	pull.GetYaxis().SetLabelSize(0.1)
	pull.GetYaxis().SetTitle("#frac{Bkg - Est}{Uncertainty}")
	pull.GetYaxis().SetTitleSize(0.08)
	pull.GetYaxis().SetTitleOffset(0.5)
	pull.GetYaxis().CenterTitle()
	pull.SetMarkerStyle(20)
	indicator = ROOT.TF1('ind'+name, '0')
	indicator.SetLineColor(ROOT.kBlack)
	indicator.SetLineWidth(1)

	pullpad.cd()
	# pullpad.SetLogx()
	pull.GetXaxis().SetRange(0, H.FindLastBinAbove(0)+5)
	# pull.GetXaxis().SetRangeUser(0, 1600)
	pull.Draw()
	maxpull = max(abs(pull.GetMaximum()),abs(pull.GetMinimum()))
	pull.GetYaxis().SetRangeUser(-maxpull - 0.2, maxpull + 0.2) # asymmetric pulls
	indicator.Draw("same")
	canvas.cd()
	# pad.SetLogx()
	pad.Draw()
	pullpad.Draw()
	canvas.Print(name + ".png")
	canvas.Close()
	ROOT.gSystem.ProcessEvents()

def styleRatio(H, E, name):
    canvas = ROOT.TCanvas("c"+name, "", 600, 600)
    pad = ROOT.TPad(name, name, 0, 0.25, 1, 1)
    pad.SetTopMargin(0.1)
    pad.SetBottomMargin(0.005)
    pad.SetLeftMargin(0.13)
    pad.SetRightMargin(0.15)
    pad.SetLogy()
    H.SetLineColor(ROOT.kBlack)
    H.GetYaxis().SetTitle("Number of events")
    H.SetMarkerStyle(20)
    H.SetLineWidth(1)
    H.SetStats(0)
    E.SetLineColor(ROOT.kRed)
    E.SetLineWidth(1)
    # try: E.SetStats(0)
    pad.cd()
    H.GetXaxis().SetRange(0, H.FindLastBinAbove(0)+5)
    # H.GetXaxis().SetRangeUser(0, 1600)
    H.Draw()
    E.Draw("same hist")

    ratio = H.Clone("r"+name)
    ratio.Divide(E)
    for n in range(1, ratio.GetXaxis().GetNbins()):
        ratio.SetBinError(n, 0)
        try:
            if ratio.GetXaxis().GetBinUpEdge(n) <= E.GetHistogram().GetBinLowEdge(E.GetHistogram().FindFirstBinAbove(0)): ratio.SetBinContent(n, 1)
        except:
            if ratio.GetXaxis().GetBinUpEdge(n) <= E.GetBinLowEdge(E.FindFirstBinAbove(0)): ratio.SetBinContent(n, 1)

    ratiopad = ROOT.TPad("rp"+name, '', 0, 0, 1, 0.25)
    ratiopad.SetLeftMargin(0.13)
    ratiopad.SetRightMargin(0.15)
    ratiopad.SetTopMargin(0.04)
    ratiopad.SetBottomMargin(0.3)
    ratiopad.SetGrid()
    ratio.SetBit(ROOT.TH1.kNoTitle)
    ratio.SetStats(0)
    ratio.SetLineColor(ROOT.kRed)
    ratio.SetFillColor(ROOT.kWhite)
    ratio.GetXaxis().SetLabelSize(0.1)
    ratio.GetXaxis().SetTitle('#bar{M}_{jj} [GeV]')
    ratio.GetXaxis().SetTitleSize(0.1)
    ratio.GetYaxis().SetNdivisions(505)
    ratio.GetYaxis().SetLabelSize(0.1)
    ratio.GetYaxis().SetTitle("#frac{Bkg}{Est}")
    ratio.GetYaxis().SetTitleSize(0.08)
    ratio.GetYaxis().SetTitleOffset(0.5)
    ratio.GetYaxis().CenterTitle()
    ratio.SetMarkerStyle(20)
    indicator = ROOT.TF1('ind'+name, '1')
    indicator.SetLineColor(ROOT.kBlack)
    indicator.SetLineWidth(1)

    ratiopad.cd()
    ratio.GetXaxis().SetRange(0, H.FindLastBinAbove(0)+5)
    ratio.Draw()
    maxpull = max(abs(ratio.GetMaximum()),abs(ratio.GetMinimum()))
    # ratio.GetYaxis().SetRangeUser(0, maxpull + 0.2) # asymmetric pulls
    ratio.GetYaxis().SetRangeUser(0, 5)
    indicator.Draw("same")
    canvas.cd()
    pad.Draw()
    ratiopad.Draw()
    canvas.Print(name + ".png")
    canvas.Close()
    ROOT.gSystem.ProcessEvents()
